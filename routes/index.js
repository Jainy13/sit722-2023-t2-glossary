var express = require('express');
var router = express.Router();

/* GET home page. */
const listItems = [
  {'id': '1 ','term': 'IaaS','description': 'IaaS is a category of cloud service that provides access to infrastructure resources, such as data storage, VMs or containers. When you use IaaS, you can quickly and easily deploy the infrastructure you need to host applications or store data in the cloud','references': 'https://www.techtarget.com/searchcloudcomputing/feature/How-to-choose-a-PaaS-or-IaaS-that-aligns-with-DevOps#:~:text=What%20are%20the%20benefits%20of%20IaaS%20for%20DevOps%3F,store%20data%20in%20the%20cloud'},
  {'id': '2','term': 'Application Deployment','description': 'Deployment in DevOps is a process that enables you to retrieve important codes from version control so that they can be made readily available to the public and they can use the application in a ready-to-use and automated fashion.','references': 'https://www.knowledgehut.com/blog/devops/devops-deployment-tools'},
  {'id': '3','term': 'Application Servers','description': 'Application servers provide the core functionality of the WebSphere® Application Server product family. Application servers extend the ability of a web server to handle Web application requests, and much more. An application server enables a server to generate a dynamic, customized response to a client request.','references': 'https://www.ibm.com/docs/en/was/9.0.5?topic=administering-introduction-application-servers'},
  {'id': '4','term': 'Behavior-Driven Development Testing','description': 'BDD (behavior-driven development) is a software development process based on the Agile methodology. The concept of behavior-driven development originated from the test-driven development (TDD) approach. This software development process is focused on end-user requirements and their interactions with the product.','references': 'https://www.spiceworks.com/tech/devops/articles/what-is-bdd/#:~:text=BDD%20(behavior%2Ddriven%20development),their%20interactions%20with%20the%20product.'},
  {'id': '5','term': 'Code Inspection / Code Quality','description': 'Code quality refers to how well-written and maintainable software code is. It encompasses factors such as readability, efficiency, scalability, reliability, maintainability and security. High code quality ensures that software is easy to understand, modify and extend, has fewer bugs and is less likely to break down.','references': 'https://devops.com/5-unusual-ways-to-improve-code-quality/#:~:text=Code%20quality%20refers%20to%20how,less%20likely%20to%20break%20down.'},
  {'id': '6','term': 'Configuration Management','description': 'Configuration management occurs when a configuration platform is used to automate, monitor, design and manage otherwise manual configuration processes. System-wide changes take place across servers and networks, storage, applications, and other managed systems','references': 'https://www.bmc.com/blogs/devops-configuration-management'},
  {'id': '7','term': 'Containerization Tools','description': 'Containerization packages software code with dependencies and an operating system in the form of a standalone application that can be run on top of another computer. These virtualized environments are lightweight by design and require comparatively little computing power. They can also be run on any underlying infrastructure and are portable, or are able to be consistently run on any platform.','references': 'https://resources.github.com/devops/containerization/'},
  {'id': '8','term': 'Continuous Integration & Deployment','description': 'CI stands for continuous integration, a fundamental DevOps best practice where developers frequently merge code changes into a central repository where automated builds and tests run. But CD can either mean continuous delivery or continuous deployment','references': 'https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment#:~:text=CI%20stands%20for%20continuous%20integration,continuous%20delivery%20or%20continuous%20deployment.'},
  {'id': '9','term': 'Web servers','description': 'Web server is a computer where the web content is stored. Basically web server is used to host the web sites but there exist other web servers also such as gaming, storage, FTP, email etc. A web server stores and delivers the content for a website – such as text, images, video, and application data – to clients that request it.','references': 'https://www.devopsschool.com/blog/list-of-top-5-web-servers-in-2021/#:~:text=A%20web%20server%20stores%20and,to%20clients%20that%20request%20it.'},
  {'id': '10','term': 'Version Control / Branch Management','description': 'Branching is the process of creating separate branches of code that developers work on. After the branch code has been tested and the work is finished, the branch gets migrated to the trunk of the code.','references': 'https://www.heptabit.at/blog/devops/devops-branching-strategy-what-is-it-how-it-works#:~:text=Branching%20is%20the%20process%20of,be%20complicated%20and%20get%20messy.'},
  {'id': '11','term':'Issue Tracking','description':'A procedure that enables programmers and quality control staff to follow the progression of new features and errors from identification to resolution.','references':'https://learn.microsoft.com/en-us/azure/well-architected/devops/issue-tracking'},
  {'id': '12','term':'Rollback','description':'The simplest approach to reverse a deployment is to use deployment rollback. It entails reverting your programme to a prior version using a backup or a source control repository.','references':'https://www.linkedin.com/advice/0/how-do-you-choose-between-deployment-rollback'},
  {'id': '13','term':'Elasticity','description':'Elasticity refers to the capacity to dynamically scale computer resources up or down in response to demand. Utilising containerization or cloud infrastructure technologies, it includes real-time resource allocation and deallocation to provide optimal performance and cost effectiveness in response to shifting workloads.','references':'https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-elastic-computing'},
  {'id': '14','term':'Infrastructure as Code(IaC)','description':'Infrastructure as Code refers to the delivery and management of infrastructure using code as opposed to manual procedures.','references':'https://www.redhat.com/en/topics/automation/what-is-infrastructure-as-code-iac#:~:text=Infrastructure%20as%20Code%20(IaC)%20is,to%20edit%20and%20distribute%20configurations.'},
  {'id': '15','term':'Infrastructure Monitoring','description':'Infrastructure monitoring involves gathering and analysing data from IT systems, processes, and infrastructure in order to enhance business outcomes and provide value for the entire organisation.','references':'https://www.dynatrace.com/news/blog/what-is-infrastructure-monitoring-2/#:~:text=Infrastructure%20monitoring%20is%20the%20process,the%20oxygen%20to%20your%20infrastructure.'},
  {'id': '16','term':'Microservices','description':'The architectural method of creating a distributed application using independently deployable services that carry out certain business operations and interact via web interfaces is known as microservices.','references':'https://learn.microsoft.com/en-us/devops/deliver/what-are-microservices'},
  {'id': '17','term':'Quality Assurance(QA)','description':'Testing in real-time helps developers by simplifying the product pipeline by doing ongoing quality checks to keep the testing cycle operating smoothly.','references':'https://www.copado.com/devops-hub/blog/dont-underestimate-the-role-of-qa-in-devops-for-these-3-reasons-crt'},
  {'id': '18','term':'Workflow','description':'The sequence in which tasks are executed is referred to as the workflow.','references':'https://hkrtrainings.com/devops-workflow'},
  {'id': '19','term':'Container registry','description':'A repository, or group of repositories, is used to store and provide access to container images.','references':'https://www.redhat.com/en/topics/cloud-native-apps/what-is-a-container-registry#:~:text=A%20container%20registry%20is%20a,as%20part%20of%20DevOps%20processes'},
  {'id': '20','term':'Docker','description':'The best technology for creating and executing containers is offered by Docker. All significant operating systems support the open source, industry-standard Docker format, or OCI.','references':'https://kodekloud.com/blog/role-of-docker-in-devops/#'},
  {'id': '21','term':'Internal developer platform (IDP)','description':'An Internal Developer Platform within the realm of DevOps denotes a collection of tools, services, and methodologies aimed at optimizing and augmenting the software development procedure within a company. This framework serves as an environment granting development teams the autonomy to independently initiate, launch, and oversee applications, all while achieving heightened swiftness and effectiveness.','references':'https://thechief.io/c/editorial/what-is-an-internal-developer-platform/'},
  {'id': '22','term':'Rolling deployments','description':'Rolling deployments within the DevOps context entail a deployment approach wherein fresh iterations of an application or software are progressively and consecutively launched into the production environment. Instead of implementing the new version in its entirety simultaneously, this approach revolves around gradually enhancing specific portions of the infrastructure while maintaining the current versions operation.','references':'https://www.techtarget.com/searchitoperations/definition/rolling-deployment'},
  {'id': '23','term':'Runbooks','description':'Runbooks within the context of DevOps comprise documented protocols, directions, and principles that furnish a methodical, stepwise methodology for overseeing, resolving issues, and upholding systems, applications, and procedures.','references':'https://www.blameless.com/blog/runbook-template-devops'},
  {'id': '24','term':'Capacity Test','description':'The objective of a capacity test is to ascertain the highest workload the system can manage prior to encountering reduced performance or system failure.','references':'https://www.radview.com/blog/all-you-need-to-know-about-capacity-testing/#:~:text=Capacity%20Testing%20exercises%20the%20system,the%20infrastructure%20to%20optimize%20quality.'},
  {'id': '25','term':'Exploratory Testing','description':'Exploratory testing entails a flexible and spontaneous testing method where testers engage with the software by actively exploring its functionalities. They do so without depending on preplanned test cases. This process involves learning about the system, uncovering problems, and spontaneously devising test scenarios.','references':'https://www.guru99.com/exploratory-testing.html'},
  {'id': '26','term':'Mean Time Between Failures (MTBF)','description':'Mean Time Between Failures (MTBF) serves as a measurement that calculates the average duration a software application or system functions before facing a failure. This metric is employed to assess the dependability and consistency of the application within an environment focused on continuous delivery and deployment.','references':'https://medium.com/@fabiojose/devops-kpi-chapter-3-3f47fcec9673'},
  {'id': '27','term':'User Acceptance Test','description':'User Acceptance Testing (UAT) constitutes a stage within the software development lifecycle in which the application or system undergoes assessment by end-users or stakeholders. The aim is to confirm that the software aligns with their needs and anticipated outcomes. UATs purpose is to ascertain whether the software is prepared for release and deployment, guided by user requirements.','references':'https://devops.com/what-is-user-acceptance-testing-and-why-is-it-so-important/'},
  {'id': '28','term':'Fail Fast','description':'The principle underscores the importance of promptly recognizing and rectifying failures in the early stages of the software development process. It promotes swift identification and resolution of problems to prevent their escalation to later phases or production environments.','references':'https://katalon.com/resources-center/blog/stop-test-execution-fail-fast'},
  {'id': '29','term':'Release Orchestration','description':'Release orchestration involves strategically coordinating and overseeing the complete release lifecycle of software applications or systems. This encompasses planning, automation, and overseeing the deployment of new enhancements, updates, or features across different environments, spanning from development to production.','references':'https://www.professional-devops.com/release-orchestration.html'},
  {'id': '30','term':'Datadog','description':'Datadog serves as a monitoring and analytics platform utilized for obtaining valuable insights into the performance, availability, and overall well-being of applications, infrastructure, and systems. Its comprehensive set of tools and features is tailored to support teams in effectively monitoring, identifying and resolving issues, as well as enhancing the efficiency of their environments.','references':'https://petri.com/what-is-datadog/'}
];

router.get('/', function(req, res, next) {
  res.render('index', { title: 'SIT722 DevOps Glossary',
  list: listItems });
});

module.exports = router;
